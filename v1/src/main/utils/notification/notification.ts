import { notification } from "antd";


/**
 *
 * @param setOpen - —Ñ—É–Ω–∫—Ü–∏—è drawer
 * @param error (ErrorType | null) - –æ—à–∏–±–∫–∞, —Ö–∑ –∫–∞–∫ –ø–æ –¥—Ä—É–≥–æ–º—É —Å–¥–µ–ª–∞—Ç—å
 * @param message
 * @returns
 */
export const notifyAndCloseDrawer = (
  setOpen: SetOpenType,
  error: any,
  message?: string
) => {
  console.log("üöÄ ~ file: parser.tsx:36 ~ notifyAndClose ~ error:", error);
  if (error === null) {
    setTimeout(() => {
      notification.success({
        message: message ? message : "–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã",
      });
      setOpen(false);
    }, 1000);
  } else {
    setTimeout(() => {
      notification.error({
        message: "–û—à–∏–±–∫–∞ " + error.status,
        description: error.message,
      });
    }, 1000);
    throw error;
  }
};

export const notifyRequest = (error: any, message?: string) => {
  if (error === null) {
    setTimeout(() => {
      notification.success({
        message: message ? message : "–í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ Refook",
      });
    }, 1000);
  } else {
    setTimeout(() => {
      notification.error({
        message: "–û—à–∏–±–∫–∞ " + error.status,
        description: error.message,
      });
    }, 1000);
    throw error;
  }
};
